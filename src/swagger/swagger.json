{
  "openapi": "3.0.1",
  "info": {
    "title": "Intern-Backend",
    "termsOfService": "",
    "contact": {
      "email": ""
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Auth"
    },
    {
      "name": "User"
    },
    {
      "name": "Blog-Category"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Signup",
        "description": "User Signup, userName: should contain atleast 3 character",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          }
        ],
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "username",
                  "email",
                  "gender",
                  "membership_type",
                  "password",
                  "date_of_birth",
                  "phone_number"
                ],
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "membership_type": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Signin",
        "description": "User Signin",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          }
        ],
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": ["username", "password"],
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },

    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "description": "User can logged out his/her account",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "userAccessToken": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/auth/request-reset/{email}": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Request Password Reset",
        "description": "User Request Password Reset , must provide a valid registered email",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/Email"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/auth/verify-code": {
      "get": {
        "tags": ["Auth"],
        "summary": "User Verify Password Reset Code",
        "description": "User Verify Password Reset Code",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/Code"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Reset Password",
        "description": "User Reset Password , Must provide verify-code and new-password",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          }
        ],
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": ["code", "password"],
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Generates New Access and Refresh Token",
        "description": "User Generates New Access and Refresh Token , Should provide refresh token",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          }
        ],
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": ["refreshToken"],
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/auth/{id}/generateTokens": {
      "post": {
        "tags": ["Auth"],
        "summary": "User Generates New Access and Refresh Token",
        "description": "User Generates New Access and Refresh Token , Should provide refresh token",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/Id"
          }
        ],
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": ["refreshToken"],
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },

    "/users/all": {
      "get": {
        "tags": ["User"],
        "summary": "Get Users",
        "description": "Get All User",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noDataResponseObject"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "userAccessToken": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/{username}": {
      "get": {
        "tags": ["User"],
        "summary": "Get User",
        "description": "Get User , Should provide username",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/UserName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noDataResponseObject"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "userAccessToken": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/update": {
      "put": {
        "tags": ["User"],
        "summary": "Update User",
        "description": "Update User, Username can change only one time",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          }
        ],
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "gender",
                  "membership_type",
                  "password",
                  "date_of_birth",
                  "phone_number"
                ],
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "membership_type": {
                    "type": "string",
                    "default": "user"
                  },
                  "password": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noDataResponseObject"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "userAccessToken": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/{username}/status": {
      "get": {
        "tags": ["User"],
        "summary": "Get User Status",
        "description": "Get User Status , Should provide username",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcceptLanguage"
          },
          {
            "$ref": "#/components/parameters/UserName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noDataResponseObject"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "userAccessToken": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    }
  },
  "components": {
    "schemas": {
      "serverErrorResponse": {
        "title": "Server Error Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "err": {
            "type": "string"
          }
        },
        "example": {
          "status": 500,
          "message": "Something Went Wrong",
          "err": "Error"
        }
      },
      "badRequestResponse": {
        "title": "Bad Request Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "validationErrors": {
            "type": "string"
          }
        },
        "example": {
          "status": 400,
          "message": "Something Went Wrong",
          "validationErrors": "Error"
        }
      },
      "forbiddenResponse": {
        "title": "Unauthorized Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "status": 401,
          "message": "Unauthorized"
        }
      },
      "noDataResponseObject": {
        "title": "No Data Object Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        },
        "example": {
          "status": 404,
          "message": "No Data Found",
          "data": ""
        }
      },
      "createdResponse": {
        "title": "Created Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        },
        "example": {
          "status": 201,
          "message": "Created",
          "data": {}
        }
      },
      "successResponseObject": {
        "title": "Success Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        },
        "example": {
          "status": 200,
          "message": "Successful",
          "data": {}
        }
      }
    },
    "parameters": {
      "AcceptLanguage": {
        "name": "accept-language",
        "in": "header",
        "description": "Incase we want to send current language along our request",
        "schema": {
          "type": "string",
          "default": "en"
        }
      },
      "AddressId": {
        "name": "addressId",
        "in": "path",
        "schema": {
          "type": "string"
        }
      },
      "Email": {
        "name": "email",
        "required": true,
        "in": "path",
        "schema": {
          "type": "string"
        }
      },
      "Code": {
        "name": "c",
        "required": true,
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "Id": {
        "name": "id",
        "required": true,
        "in": "path",
        "schema": {
          "type": "number"
        }
      },
      "with_user": {
        "name": "with_user",
        "required": true,
        "in": "path",
        "schema": {
          "type": "number"
        }
      },
      "Slug": {
        "name": "slug",
        "required": true,
        "in": "path",
        "schema": {
          "type": "string"
        }
      },
      "per_page": {
        "in": "query",
        "name": "per_page",
        "schema": {
          "type": "number"
        },
        "description": "defines total data in one page"
      },
      "next": {
        "in": "query",
        "name": "next",
        "schema": {
          "type": "string"
        },
        "allowReserved": true,
        "description": "provide the string value mentioned as after,get by first click"
      },
      "prev": {
        "in": "query",
        "name": "prev",
        "schema": {
          "type": "string"
        },
        "allowReserved": true,
        "description": "provide the string value mentioned as before,get by first click"
      },
      "desc": {
        "in": "query",
        "name": "desc",
        "schema": {
          "type": "boolean"
        }
      },
      "post_next": {
        "in": "query",
        "name": "post_next",
        "schema": {
          "type": "string"
        },
        "allowReserved": true,
        "description": "provide the string value mentioned as after,get by first click"
      },
      "post_prev": {
        "in": "query",
        "name": "post_prev",
        "schema": {
          "type": "string"
        },
        "allowReserved": true,
        "description": "provide the string value mentioned as before,get by first click"
      },
      "blog_next": {
        "in": "query",
        "name": "blog_next",
        "schema": {
          "type": "string"
        },
        "allowReserved": true,
        "description": "provide the string value mentioned as after,get by first click"
      },
      "blog_prev": {
        "in": "query",
        "name": "blog_prev",
        "schema": {
          "type": "string"
        },
        "allowReserved": true,
        "description": "provide the string value mentioned as before,get by first click"
      },
      "Choice": {
        "name": "choice",
        "in": "path",
        "schema": {
          "type": "number"
        }
      },
      "UniqueId": {
        "name": "id",
        "required": true,
        "in": "path",
        "schema": {
          "type": "string"
        },
        "description": "Unique Id"
      },
      "UserName": {
        "name": "username",
        "required": true,
        "in": "path",
        "schema": {
          "type": "string"
        }
      },
      "order_next": {
        "in": "query",
        "name": "order_next",
        "schema": {
          "type": "string"
        },
        "allowReserved": true,
        "description": "provide the string value mentioned as after,get by first click"
      },
      "order_prev": {
        "in": "query",
        "name": "order_prev",
        "schema": {
          "type": "string"
        },
        "allowReserved": true,
        "description": "provide the string value mentioned as before,get by first click"
      },
      "Query": {
        "in": "query",
        "name": "q",
        "schema": {
          "type": "string"
        },
        "description": "defines query"
      },
      "Filter": {
        "in": "query",
        "name": "f",
        "schema": {
          "type": "string"
        },
        "description": "defines filter"
      },
      "Status": {
        "name": "status",
        "required": true,
        "in": "path",
        "schema": {
          "type": "boolean"
        }
      },
      "Page": {
        "in": "query",
        "name": "page",
        "schema": {
          "type": "number"
        },
        "description": "must be greater than zero"
      },
      "CategoryId": {
        "in": "path",
        "name": "category_id",
        "required": true,
        "schema": {
          "type": "number"
        }
      },
      "ProductId": {
        "in": "path",
        "name": "product_id",
        "required": true,
        "schema": {
          "type": "number"
        }
      },
      "OrderNumber": {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Type": {
        "in": "path",
        "name": "type",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "type": {
        "in": "query",
        "name": "type",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Songs": {
        "in": "body",
        "name": "songs",
        "schema": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "song_id": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "userAccessToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "userRefreshToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
